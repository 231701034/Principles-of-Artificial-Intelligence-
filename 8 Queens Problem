def print_board(board):
    for row in board:
        print(' '.join('Q' if x else '.' for x in row))
    print()
def is_safe(board, row, col):
    for i in range(row):
        if board[i][col]:
            return False
    for i, j in zip(range(row-1, -1, -1), range(col-1, -1, -1)):
        if board[i][j]:
            return False
    for i, j in zip(range(row-1, -1, -1), range(col+1, len(board))):
        if board[i][j]:
            return False
    return True
def solve_queens(board, row):
    if row == len(board):
        print_board(board)
        return True
    for col in range(len(board)):
        if is_safe(board, row, col):
            board[row][col] = True 
            if solve_queens(board, row + 1):
                return True
            board[row][col] = False
    return False
def eight_queens():
    board = [[False] * 8 for _ in range(8)]
    if not solve_queens(board, 0):
        print("No solution found")
eight_queens()
